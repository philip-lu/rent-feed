{"version":3,"sources":["FetchAdds.js","App.js","reportWebVitals.js","index.js"],"names":["FetchAdds","state","loading","adds","refresh","setState","loadData","this","intervalID","setInterval","bind","clearInterval","a","fetch","headers","response","json","data","results","console","log","className","onClick","map","apartment","target","rel","href","street","building_no","is_owner","style","display","id","string","providers","created_at","Date","toLocaleDateString","year","month","day","weekday","price_uah","price_usd","images","i","src","alt","floor","floors_total","description","url","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAGqBA,E,4MACjBC,MAAQ,CACJC,SAAS,EACTC,KAAM,M,EA2BRC,QAAU,WACR,EAAKC,SAAS,CACVF,KAAM,OAEV,EAAKG,Y,uDAbT,WACIC,KAAKD,WACLC,KAAKC,WAAaC,YAAYF,KAAKD,SAASI,KAAKH,MAAO,O,kCAG5D,WACII,cAAcJ,KAAKC,c,6DAUvB,8BAAAI,EAAA,sEAEoB,qHAFpB,SAG+BC,MADX,qHACsB,CAC9BC,QAAS,CACD,kBAAmB,QALvC,cAGcC,EAHd,gBAQ2BA,EAASC,OARpC,OAQcC,EARd,OASQV,KAAKF,SAAS,CACVF,KAAMc,EAAKC,QACXhB,SAAS,IAXrB,kDAcQiB,QAAQC,IAAR,MAdR,0D,0EAkBA,WAMI,OACI,gCACI,wBAAQC,UAAU,aAAaC,QAASf,KAAKH,QAA7C,qBACCG,KAAKN,MAAMC,UAAYK,KAAKN,MAAME,KAAS,qBAAKkB,UAAU,gBACxD,8BACCd,KAAKN,MAAME,KAAKoB,KAAI,SAAAC,GAAS,OAC1B,sBAAKH,UAAU,iBAAf,UACK,sBAAKA,UAAU,WAAf,UACI,mBAAGI,OAAO,SAASC,IAAI,aAAaL,UAAU,WAAWM,KAAM,mDAAqDH,EAAUI,OAAS,IAAMJ,EAAUK,YAAvJ,SACI,oBAAGR,WAAkC,IAAvBG,EAAUM,SAAoB,QAAU,UAAtD,UACKN,EAAUI,OADf,KACyBJ,EAAUK,YAC/B,sBAAMR,UAAU,QAAQU,MAAO,CAAEC,SAAgC,IAAvBR,EAAUM,SAAoB,GAAK,QAA7E,sFAFmEN,EAAUS,MAKrF,oBAAGZ,UAAU,YAAb,eAnBHa,EAoBuBV,EAAUW,UAAU,GAAGC,WAlBxD,IAAIC,KAAKH,GAAQI,mBAAmB,QAD7B,CAAEC,KAAM,UAAWC,MAAO,OAAQC,IAAK,UAAWC,QAAS,gBAuB1D,oBAAGrB,UAAU,QAAb,UAAqB,uBAAMA,UAAU,YAAhB,UAA6BG,EAAUmB,UAAvC,0BAA6D,uBAAMtB,UAAU,YAAhB,gBAAgCG,EAAUoB,UAA1C,aAClF,qBAAKvB,UAAU,wBAAf,SACMG,EAAUqB,OAAOtB,KAAI,SAAAuB,GAAC,OACnB,qBAAKzB,UAAU,6BAA6B0B,IAAKD,EAAWE,IAAKF,GAARA,QAGlE,oBAAGzB,UAAU,QAAb,UAAqB,sBAAMA,UAAU,YAAhB,SAA4B,mCAASG,EAAUmB,UAAnB,4BAAkD,uBAAMtB,UAAU,YAAhB,gBAAgCG,EAAUoB,UAA1C,aACnG,0DAASpB,EAAUyB,MAAnB,iBAA8BzB,EAAU0B,gBACxC,mBAAG7B,UAAU,cAAb,SAA4BG,EAAU2B,cACtC,mBAAG1B,OAAO,SAASC,IAAI,aAAaC,KAAMH,EAAUW,UAAU,GAAGiB,IAAjE,SAAuE5B,EAAUW,UAAU,GAAGiB,QAtB7D5B,EAAUS,IAX1C,IAACC,c,GAxDUmB,IAAMC,WCM9BC,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fa2e25ba.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Feed.css\"\n\nexport default class FetchAdds extends React.Component {\n    state = {\n        loading: true,\n        adds: null,\n    }\n\n    // Static fetch\n   /*  async componentDidMount() {\n        const url = \"https://dimdim.wrenchtech.io/api/search/9498dc25-3472-4e20-83a9-1d6403dc39e3/list/?offset=0&limit=21&ordering=date\";\n        const response = await fetch(url, {\n            headers: {\n                \"Accept-Language\": \"ru\"\n            }\n        });\n        const data = await response.json();\n        this.setState({ adds: data.results, loading: false});\n    } */\n\n    // ----- Fetch interval------ //\n    intervalID;\n\n    componentDidMount() {\n        this.loadData()\n        this.intervalID = setInterval(this.loadData.bind(this), 600000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n      }\n\n      refresh = () => {\n        this.setState({\n            adds: null,\n        });\n        this.loadData();\n      }\n\n    async loadData() {\n        try {\n            const url = \"https://dimdim.wrenchtech.io/api/search/9498dc25-3472-4e20-83a9-1d6403dc39e3/list/?offset=0&limit=21&ordering=date\";\n            const response = await fetch(url, {\n                headers: {\n                        \"Accept-Language\": \"ru\"\n                    }\n            });\n            const data = await response.json();\n            this.setState({ \n                adds: data.results, \n                loading: false\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n  \n    render(){\n        const formateDate = (string) => {\n            var options = { year: 'numeric', month: 'long', day: 'numeric', weekday: 'long' };\n            return new Date(string).toLocaleDateString(\"ru-RU\", options);\n        };\n\n        return (\n            <div>\n                <button className=\"get-button\" onClick={this.refresh}>Refresh</button>\n                {this.state.loading || !this.state.adds ? ( <div className=\"whiteScreen\"></div> ) : ( \n                   <div>\n                   {this.state.adds.map(apartment => (\n                       <div className=\"apartment-card\" key={apartment.id}>\n                            <div className=\"topItems\">\n                                <a target=\"_blank\" rel=\"noreferrer\" className=\"mapsLink\" href={\"https://www.google.com/maps/search/?api=1&query=\" + apartment.street + \",\" + apartment.building_no }>\n                                    <p className={apartment.is_owner === true ? \"owner\" : \"address\" } key={apartment.id}>\n                                        {apartment.street}, {apartment.building_no}\n                                        <span className=\"owner\" style={{ display: apartment.is_owner === true ? \"\" : \"none\" }}> (от владельца)</span>\n                                    </p>\n                                </a>\n                                <p className=\"date-time\"> {\n                                        formateDate(apartment.providers[0].created_at)\n                                    }\n                                </p>\n                            </div>\n                           <p className=\"price\"><span className=\"price-uah\">{apartment.price_uah} грн.</span><span className=\"price-usd\"> / {apartment.price_usd} usd</span></p>\n                           <div className=\"apartment-card-images\">\n                                {apartment.images.map(i => (\n                                    <img className=\"apartment-card-images-item\" src={i} key={i} alt={i}/>\n                                ))}\n                           </div>\n                           <p className=\"price\"><span className=\"price-uah\"><strong>{apartment.price_uah} грн.</strong></span><span className=\"price-usd\"> / {apartment.price_usd} usd</span></p>\n                           <p>этаж {apartment.floor} из {apartment.floors_total}</p>\n                           <p className=\"description\">{apartment.description}</p>\n                           <a target=\"_blank\" rel=\"noreferrer\" href={apartment.providers[0].url}>{apartment.providers[0].url}</a>\n                       </div>\n                   ))}\n               </div> \n                )}\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport FetchAdds from \"./FetchAdds\";\n\nfunction App() {\n  return(\n    <FetchAdds />\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}